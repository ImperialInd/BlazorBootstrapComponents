@using BlazorBootstrapComponents.Enums
@{
	string _class = string.Concat(IsFormLabel ? "form-label mb-0 " : "",
								(Bold ? "fw-bold " : ""),
								(ColumnFormLabel ? "col-form-label " : ""),
								GenerateFunctions.GenerateFormLabelControlSize(Size),
								GenerateFunctions.GenerateFontSize(FontSize),
								GenerateFunctions.GenerateTextColor(Color),
								Class).Trim();

	AdditionalAttributes.Remove("class");
	AdditionalAttributes.Add("class", _class);

	AdditionalAttributes.Remove("for");
	if (For != null) AdditionalAttributes.Add("for", For);
}
<label @attributes=@AdditionalAttributes>@ChildContent</label>

@code {
	protected override void OnInitialized()
	{
		AdditionalAttributes.Remove("for");
		AdditionalAttributes.Add("for", @For);

		base.OnInitialized();
	}

	[Parameter] public string Class { get; set; } = string.Empty;
	[Parameter] public bool Bold { get; set; }
	[Parameter] public bool IsFormLabel { get; set; }
	[Parameter] public string For { get; set; } = string.Empty;
	[Parameter] public FontSizeEnum FontSize { get; set; } = FontSizeEnum.Empty;
	[Parameter] public ControlSizeEnum Size { get; set; } = ControlSizeEnum.Standard;
	[Parameter] public TextColorEnum Color { get; set; } = TextColorEnum.Empty;
	[Parameter] public RenderFragment ChildContent { get; set; }
	[Parameter] public bool ColumnFormLabel { get; set; }

	private Dictionary<string, object> AdditionalAttributes { get; set; } = new Dictionary<string, object>();

}